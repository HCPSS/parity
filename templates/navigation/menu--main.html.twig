{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link URL, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see https://twig.symfony.com/doc/3.x/tags/macro.html
#}
<nav class="navbar" role="navigation" aria-label="main navigation">
  <div class="navbar-brand">
    <a id="js-navbar-burger" role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navbar-menu">
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </a>
  </div>
  <div id="js-navbar-menu" class="navbar-menu">
    <div class="navbar-start">
      {{ menus.menu_links(items, attributes, 0) }}
    </div>
  </div>
</nav>

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% for item in items %}
      {% set classes = [
        item.below ? 'navbar-link' : 'navbar-item',
        item.is_expanded ? 'menu-item--expanded',
        item.is_collapsed ? 'menu-item--collapsed',
        item.in_active_trail ? 'menu-item--active-trail',
      ] %}

      {% if item.below %}
        <div class="navbar-item has-dropdown is-hoverable">
      {% endif %}

      {{ link(item.title, item.url, create_attribute({'class': classes})) }}

      {% if item.below %}
        <div class="navbar-dropdown">
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        </div>
      {% endif %}

      {% if item.below %}
        </div>
      {% endif %}
    {% endfor %}
  {% endif %}
{% endmacro %}
